{"ast":null,"code":"import { apiRequest } from '../API/api';\nconst initialState = {\n  token: null\n};\nexport const regReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'SET_TOKEN':\n      return { ...state,\n        token: action.payload\n      };\n\n    default:\n      return state;\n  }\n};\n\nconst setTokenAC = payload => ({\n  type: 'SET_TOKEN',\n  payload\n});\n\nexport const setTokenThunk = () => {\n  return dispatch => {\n    apiRequest.getToken().then(data => {\n      alert(data.data.token);\n      dispatch(setTokenAC(data.data.token));\n    });\n  };\n};","map":{"version":3,"sources":["C:/Users/J/Desktop/abz-test/src/Redux/regReducer.js"],"names":["apiRequest","initialState","token","regReducer","state","action","type","payload","setTokenAC","setTokenThunk","dispatch","getToken","then","data","alert"],"mappings":"AAAA,SAAQA,UAAR,QAAyB,YAAzB;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,KAAK,EAAE;AADU,CAArB;AAIA,OAAO,MAAMC,UAAU,GAAG,CAACC,KAAK,GAAGH,YAAT,EAAuBI,MAAvB,KAAkC;AACxD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,WAAL;AACI,aAAO,EACH,GAAGF,KADA;AAEHF,QAAAA,KAAK,EAAEG,MAAM,CAACE;AAFX,OAAP;;AAIJ;AACI,aAAOH,KAAP;AAPR;AASH,CAVM;;AAYP,MAAMI,UAAU,GAAID,OAAD,KAAc;AAACD,EAAAA,IAAI,EAAE,WAAP;AAAoBC,EAAAA;AAApB,CAAd,CAAnB;;AAEA,OAAO,MAAME,aAAa,GAAG,MAAM;AAC/B,SAAQC,QAAD,IAAc;AACjBV,IAAAA,UAAU,CAACW,QAAX,GAAsBC,IAAtB,CAA4BC,IAAI,IAAI;AAChCC,MAAAA,KAAK,CAACD,IAAI,CAACA,IAAL,CAAUX,KAAX,CAAL;AACAQ,MAAAA,QAAQ,CAAEF,UAAU,CAACK,IAAI,CAACA,IAAL,CAAUX,KAAX,CAAZ,CAAR;AACH,KAHD;AAIH,GALD;AAMH,CAPM","sourcesContent":["import {apiRequest} from '../API/api'\r\n\r\nconst initialState = {\r\n    token: null\r\n}\r\n\r\nexport const regReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case 'SET_TOKEN':\r\n            return {\r\n                ...state,\r\n                token: action.payload,\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nconst setTokenAC = (payload) => ({type: 'SET_TOKEN', payload})\r\n\r\nexport const setTokenThunk = () => {\r\n    return (dispatch) => {\r\n        apiRequest.getToken().then (data => {\r\n            alert(data.data.token)\r\n            dispatch (setTokenAC(data.data.token) )\r\n        })\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}