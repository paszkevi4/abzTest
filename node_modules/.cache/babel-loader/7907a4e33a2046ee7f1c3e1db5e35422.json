{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\J\\\\Desktop\\\\abz-test\\\\src\\\\components\\\\registerForm\\\\registrationPage.jsx\";\nimport React, { useEffect, useState } from 'react';\nimport sass from './registrationPage.module.sass';\nimport Form from './form';\nimport { connect } from 'react-redux';\nimport { apiRequest } from '../../API/api';\nimport { setTokenThunk, setPositionsThunk } from '../../Redux/regReducer';\nimport { setUpdatedUsersThunk } from '../../Redux/usersReducer';\nimport x from './../../assets/x.png';\nimport ModalWindow from \"./modalWindow\";\n\nconst RegistrationPage = props => {\n  /*request relevant token and vacant positions*/\n  useEffect(() => {\n    props.setTokenThunk();\n    props.setPositionsThunk();\n  }, []);\n  /*modal window state. is not shown by default*/\n\n  let [showModal, setShowModal] = useState(false);\n  /*function changes modal window state*/\n\n  const switchModal = () => {\n    setShowModal(!showModal);\n  };\n  /*local state used for holding uploaded photo name to show it in custom input*/\n\n\n  let [photo, addPhoto] = useState(null);\n  /*function overwrites uploaded photo name */\n\n  const onPhotoAdded = event => {\n    addPhoto(event.target.files[0]);\n  };\n  /*function called once submiting valid form initiated. shows modal window, sends data to server\r\n  and requests new users data*/\n\n\n  const onSubmit = async formData => {\n    setShowModal(!showModal);\n    await apiRequest.register(formData.name, formData.email, formData.phone, Number(formData.position_id), photo, props.token);\n    props.setUpdatedUsersThunk();\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: sass.registrationPage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    className: sass.regAnchor,\n    name: \"registrationPage\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }, \"Register to get a work\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: sass.regSubtitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }, \"Attention! After successful registration and alert, update the list of users in the block from the top\"), /*#__PURE__*/React.createElement(Form, {\n    onSubmit: onSubmit,\n    positions: props.positions,\n    onPhotoAdded: onPhotoAdded,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  }), showModal ? /*#__PURE__*/React.createElement(ModalWindow, {\n    switchModal: switchModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 27\n    }\n  }) : null);\n};\n/*connecting component to store*/\n\n\nconst mapStateToProps = state => {\n  return {\n    token: state.regData.token,\n    positions: state.regData.positions\n  };\n};\n\nconst RegistrationPageContainer = connect(mapStateToProps, {\n  setTokenThunk,\n  setPositionsThunk,\n  setUpdatedUsersThunk\n})(RegistrationPage);\nexport default RegistrationPageContainer;","map":{"version":3,"sources":["C:/Users/J/Desktop/abz-test/src/components/registerForm/registrationPage.jsx"],"names":["React","useEffect","useState","sass","Form","connect","apiRequest","setTokenThunk","setPositionsThunk","setUpdatedUsersThunk","x","ModalWindow","RegistrationPage","props","showModal","setShowModal","switchModal","photo","addPhoto","onPhotoAdded","event","target","files","onSubmit","formData","register","name","email","phone","Number","position_id","token","registrationPage","regAnchor","regSubtitle","positions","mapStateToProps","state","regData","RegistrationPageContainer"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react'\r\nimport sass from './registrationPage.module.sass'\r\nimport Form from './form'\r\nimport {connect} from 'react-redux'\r\nimport {apiRequest} from '../../API/api'\r\nimport {setTokenThunk, setPositionsThunk} from '../../Redux/regReducer'\r\nimport {setUpdatedUsersThunk} from '../../Redux/usersReducer'\r\nimport x from './../../assets/x.png'\r\nimport ModalWindow from \"./modalWindow\";\r\n\r\nconst RegistrationPage = (props) => {\r\n\r\n    /*request relevant token and vacant positions*/\r\n    useEffect( () => {\r\n        props.setTokenThunk()\r\n        props.setPositionsThunk()\r\n    }, [])\r\n\r\n    /*modal window state. is not shown by default*/\r\n    let [showModal, setShowModal] = useState (false)\r\n\r\n    /*function changes modal window state*/\r\n    const switchModal = () => {\r\n        setShowModal(!showModal)\r\n    }\r\n\r\n    /*local state used for holding uploaded photo name to show it in custom input*/\r\n    let [photo, addPhoto] = useState (null)\r\n\r\n    /*function overwrites uploaded photo name */\r\n    const onPhotoAdded = (event) => {\r\n        addPhoto(event.target.files[0])\r\n    }\r\n\r\n    /*function called once submiting valid form initiated. shows modal window, sends data to server\r\n    and requests new users data*/\r\n    const onSubmit = async(formData) => {\r\n        setShowModal(!showModal)\r\n        await (apiRequest.register(formData.name, formData.email, formData.phone,\r\n            Number(formData.position_id), photo, props.token) )\r\n        props.setUpdatedUsersThunk()\r\n    }\r\n\r\n    return (\r\n        <div className={sass.registrationPage}>\r\n            <a className={sass.regAnchor} name=\"registrationPage\"></a>\r\n            <h1>Register to get a work</h1>\r\n            <p className={sass.regSubtitle}>Attention! After successful registration and alert,\r\n                update the list of users in the block from the top</p>\r\n            <Form onSubmit={onSubmit} positions={props.positions} onPhotoAdded={onPhotoAdded}/>\r\n            { showModal ? <ModalWindow switchModal={switchModal}/> : null }\r\n        </div>\r\n    )\r\n}\r\n\r\n/*connecting component to store*/\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        token: state.regData.token,\r\n        positions: state.regData.positions\r\n    }\r\n}\r\n\r\nconst RegistrationPageContainer = connect (mapStateToProps, {setTokenThunk, setPositionsThunk, setUpdatedUsersThunk})(RegistrationPage)\r\n\r\nexport default RegistrationPageContainer"]},"metadata":{},"sourceType":"module"}