{"ast":null,"code":"import { apiRequest } from '../API/api';\nconst initialState = {\n  users: [],\n  total: 1\n};\nexport const usersReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'SET_USERS':\n      return { ...state,\n        users: [...state.users, ...action.payload]\n      };\n\n    case 'SET_UPDATED_USERS':\n      return { ...state,\n        users: action.payload\n      };\n\n    case 'SET_TOTAL_PAGES':\n      return { ...state,\n        total: action.payload\n      };\n\n    default:\n      return state;\n  }\n};\n\nconst setUsersAC = payload => ({\n  type: 'SET_USERS',\n  payload\n});\n\nconst setUpdatedUsersAC = payload => ({\n  type: 'SET_UPDATED_USERS',\n  payload\n});\n\nconst setTotalPagesAC = payload => ({\n  type: 'SET_TOTAL_PAGES',\n  payload\n});\n\nexport const setUsersThunk = page => {\n  return dispatch => {\n    apiRequest.getUsers(page).then(data => {\n      dispatch(setUsersAC(data.data.users));\n    });\n  };\n};\nexport const setUpdatedUsersThunk = () => {\n  return dispatch => {\n    apiRequest.getUsers(1).then(data => {\n      dispatch(setUpdatedUsersAC(data.data.users));\n    });\n  };\n};","map":{"version":3,"sources":["C:/Users/J/Desktop/abz-test/src/Redux/usersReducer.js"],"names":["apiRequest","initialState","users","total","usersReducer","state","action","type","payload","setUsersAC","setUpdatedUsersAC","setTotalPagesAC","setUsersThunk","page","dispatch","getUsers","then","data","setUpdatedUsersThunk"],"mappings":"AAAA,SAAQA,UAAR,QAAyB,YAAzB;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,KAAK,EAAE,EADU;AAEjBC,EAAAA,KAAK,EAAE;AAFU,CAArB;AAKA,OAAO,MAAMC,YAAY,GAAG,CAACC,KAAK,GAAGJ,YAAT,EAAuBK,MAAvB,KAAkC;AAC1D,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,WAAL;AACI,aAAO,EACH,GAAGF,KADA;AAEHH,QAAAA,KAAK,EAAE,CAAC,GAAGG,KAAK,CAACH,KAAV,EAAiB,GAAGI,MAAM,CAACE,OAA3B;AAFJ,OAAP;;AAIJ,SAAK,mBAAL;AACI,aAAO,EACH,GAAGH,KADA;AAEHH,QAAAA,KAAK,EAAEI,MAAM,CAACE;AAFX,OAAP;;AAIJ,SAAK,iBAAL;AACI,aAAO,EACH,GAAGH,KADA;AAEHF,QAAAA,KAAK,EAAEG,MAAM,CAACE;AAFX,OAAP;;AAIJ;AACI,aAAOH,KAAP;AAjBR;AAmBH,CApBM;;AAsBP,MAAMI,UAAU,GAAID,OAAD,KAAc;AAACD,EAAAA,IAAI,EAAE,WAAP;AAAoBC,EAAAA;AAApB,CAAd,CAAnB;;AACA,MAAME,iBAAiB,GAAIF,OAAD,KAAc;AAACD,EAAAA,IAAI,EAAE,mBAAP;AAA4BC,EAAAA;AAA5B,CAAd,CAA1B;;AACA,MAAMG,eAAe,GAAIH,OAAD,KAAc;AAACD,EAAAA,IAAI,EAAE,iBAAP;AAA0BC,EAAAA;AAA1B,CAAd,CAAxB;;AAEA,OAAO,MAAMI,aAAa,GAAIC,IAAD,IAAU;AACnC,SAAQC,QAAD,IAAc;AACjBd,IAAAA,UAAU,CAACe,QAAX,CAAoBF,IAApB,EAA0BG,IAA1B,CAAgCC,IAAI,IAAI;AACpCH,MAAAA,QAAQ,CAAEL,UAAU,CAACQ,IAAI,CAACA,IAAL,CAAUf,KAAX,CAAZ,CAAR;AACH,KAFD;AAGH,GAJD;AAKH,CANM;AAQP,OAAO,MAAMgB,oBAAoB,GAAG,MAAM;AACtC,SAAQJ,QAAD,IAAc;AACjBd,IAAAA,UAAU,CAACe,QAAX,CAAoB,CAApB,EAAuBC,IAAvB,CAA6BC,IAAI,IAAI;AACjCH,MAAAA,QAAQ,CAAEJ,iBAAiB,CAACO,IAAI,CAACA,IAAL,CAAUf,KAAX,CAAnB,CAAR;AACH,KAFD;AAGH,GAJD;AAKH,CANM","sourcesContent":["import {apiRequest} from '../API/api'\r\n\r\nconst initialState = {\r\n    users: [],\r\n    total: 1,\r\n}\r\n\r\nexport const usersReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case 'SET_USERS':\r\n            return {\r\n                ...state,\r\n                users: [...state.users, ...action.payload],\r\n            }\r\n        case 'SET_UPDATED_USERS':\r\n            return {\r\n                ...state,\r\n                users: action.payload,\r\n            }\r\n        case 'SET_TOTAL_PAGES':\r\n            return {\r\n                ...state,\r\n                total: action.payload,\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nconst setUsersAC = (payload) => ({type: 'SET_USERS', payload})\r\nconst setUpdatedUsersAC = (payload) => ({type: 'SET_UPDATED_USERS', payload})\r\nconst setTotalPagesAC = (payload) => ({type: 'SET_TOTAL_PAGES', payload})\r\n\r\nexport const setUsersThunk = (page) => {\r\n    return (dispatch) => {\r\n        apiRequest.getUsers(page).then (data => {\r\n            dispatch (setUsersAC(data.data.users) )\r\n        })\r\n    }\r\n}\r\n\r\nexport const setUpdatedUsersThunk = () => {\r\n    return (dispatch) => {\r\n        apiRequest.getUsers(1).then (data => {\r\n            dispatch (setUpdatedUsersAC(data.data.users) )\r\n        })\r\n    }\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}